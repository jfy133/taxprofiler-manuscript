[
  {
    "objectID": "taxprofiler-manuscript.html",
    "href": "taxprofiler-manuscript.html",
    "title": "nf-core/taxprofiler: highly parallelised and flexible pipeline for metagenomic taxonomic classification and profiling",
    "section": "",
    "text": "Metagenomic classification tackles the problem of characterising the taxonomic source of all DNA sequencing reads in a sample. A common approach to address the differences and biases between the many different taxonomic classification tools is to run sequencing libraries through multiple classification tools and databases. This, however, is a very time-consuming task when performing manually - particularly when combined with the appropriate preprocessing of sequencing reads prior to classification.\nHere we present nf-core/taxprofiler, a highly parallelised taxonomic classification and processing pipeline that allows for automated and simultaneous classification and/or profiling of both short- and long-read metagenomic sequencing libraries against a large number of taxonomic classifiers and profilers as well as databases within a single pipeline run. Implemented in Nextflow and as part of the nf-core initiative, the pipeline benefits from high levels of scalability and portability, allowing for large and small projects on a wide range of computing infrastructure, as well as best-practise software development and community support to ensure longevity and adaptability of the pipeline, keeping up with the evolving field of metagenomics."
  },
  {
    "objectID": "taxprofiler-manuscript.html#abstract",
    "href": "taxprofiler-manuscript.html#abstract",
    "title": "nf-core/taxprofiler: highly parallelised and flexible pipeline for metagenomic taxonomic classification and profiling",
    "section": "",
    "text": "Metagenomic classification tackles the problem of characterising the taxonomic source of all DNA sequencing reads in a sample. A common approach to address the differences and biases between the many different taxonomic classification tools is to run sequencing libraries through multiple classification tools and databases. This, however, is a very time-consuming task when performing manually - particularly when combined with the appropriate preprocessing of sequencing reads prior to classification.\nHere we present nf-core/taxprofiler, a highly parallelised taxonomic classification and processing pipeline that allows for automated and simultaneous classification and/or profiling of both short- and long-read metagenomic sequencing libraries against a large number of taxonomic classifiers and profilers as well as databases within a single pipeline run. Implemented in Nextflow and as part of the nf-core initiative, the pipeline benefits from high levels of scalability and portability, allowing for large and small projects on a wide range of computing infrastructure, as well as best-practise software development and community support to ensure longevity and adaptability of the pipeline, keeping up with the evolving field of metagenomics."
  },
  {
    "objectID": "taxprofiler-manuscript.html#introduction",
    "href": "taxprofiler-manuscript.html#introduction",
    "title": "nf-core/taxprofiler: highly parallelised and flexible pipeline for metagenomic taxonomic classification and profiling",
    "section": "Introduction",
    "text": "Introduction\nShotgun metagenomics offers strong benefits to the taxonomic classification of DNA samples over targeted approaches (Eloe-Fadrosh et al. 2016; Florian P. Breitwieser, Lu, and Salzberg 2019). While targeted approaches such as 16S or other marker gene amplicon sequencing have in the past been useful due to low cost and large and diverse reference databases (Yilmaz et al. 2014; Lynch and Neufeld 2015), metagenomic analyses has been shown to produce similar resolution during taxonomic classification (Hillmann et al. 2018) (with increasing lower costs of shotgun sequencing), but the added benefit of having greater reusability potential of the data, via whole genome reconstruction and also functional classification of metagenomics (Sharpton 2014; Quince et al. 2017).\nTaxonomic profiling consists of identifying the original ‘taxonomic source’ of a given DNA sequence (Ye et al. 2019; Govender and Eyre 2022). In metagenomics this typically consists of comparing millions of DNA sequences against hundreds or thousands of reference genomes either via alignment or ‘k-mer matching’ (Sharpton 2014; Sun et al. 2021), and the most close match being considered the most likely original ‘source’ organism of that sequence. Some profilers additionally will also try to infer actual (cellular) species abundance of the organism in the original sample, based on the sequence abundance (Nayfach and Pollard 2016). \nDue to the scale of the problem, taxonomic profiling remains an ‘unresolved problem’ in bioinformatics. Having to identify the original source of many sequences, against many reference genomes but in an efficient manner is understandably a difficult problem. Therefore a plethora of tools have been developed to address this challenge, all with their own biases and specific contexts that they have been developed in (Sczyrba et al. 2017; Meyer et al. 2022). Additionally, each tool often produces tool-specific output formats making it difficult to efficiently cross compare results. Thus, no established ‘gold standard’ method currently exists.\nOne solution to address the range of different tools is to run all of them in parallel, and cross compare the results. This can be useful both for benchmarking studies (e.g. Sczyrba et al. 2017; Meyer et al. 2022), but also to build consensus profiles whereby confidence of a particular taxonomic identification can be increased when it is detected by multiple tools (McIntyre et al. 2017; Ye et al. 2019).\nA second challenge in taxonomic profiling  is the parameter and database choice. As with tools, there is no one set ‘gold standard’ database for taxonomic profiling. Different questions and contexts may require different databases, such as when a researcher wants to search for both bacteria_and viruses species in samples, and as an extension of this, taxonomic classifiers may need different settings for each database. Furthermore, as genomic sequencing becomes cheaper and more efficient, the number of publicly available reference genomes are rapidly increasing (Nasko et al. 2018), making the size of databases taxonomic classifiers also much a larger and often outpacing the computational capacity available to researchers. In fact, while this was one of the main motivations behind classifiers such as Kraken2 (Wood, Lu, and Langmead 2019), these algorithmic techniques are already becoming insufficient (Wright, Comeau, and Langille 2023).\nFinally, with the decrease of sequencing costs, this opens up the possibility for larger and larger metagenome sequencing, meaning the sample sizes of studies are increasing, highlighting the need for methods for efficiently profiling many samples against many tools and databases - as exemplified by the doubling of the number of metagenomes on the European Bioinformatic Institute’s MGnify database in two years (Mitchell et al. 2019, `). Manually setting up bioinformatic jobs for classification tasks for each database and settings against different tools on traditional academic computing infrastructure (e.g. high performance computing clusters or ‘HPC’ clusters) can be very tedious. Additionally, particularly for very large sample sets, there is increasing use of cloud platforms that have greater scalability than traditional HPCs. Being able to reliably and reproducibly execute taxonomic classification tasks across infrastructure with minimal intervention would therefore be a boon for the metagenomics field.\nHere we present nf-core/taxprofiler, a pipeline designed to allow users to efficiently and simultaneously taxonomically classify and profile short- and long-read sequencing data against multiple tools and databases in a single pipeline run. nf-core/taxprofiler utilises Nextflow (Di Tommaso et al. 2017) to ensure efficiency, portability, and scalability, and has been developed within the nf-core initiative of Nextflow pipelines (Ewels et al. 2020) to ensure high quality coding practises and user accessibility, including detailed documentation and a graphical-user-interface (GUI) execution interface."
  },
  {
    "objectID": "taxprofiler-manuscript.html#implementation",
    "href": "taxprofiler-manuscript.html#implementation",
    "title": "nf-core/taxprofiler: highly parallelised and flexible pipeline for metagenomic taxonomic classification and profiling",
    "section": "Implementation",
    "text": "Implementation\nnf-core/taxprofiler aims to facilitate three main steps of a typical shotgun metagenomic workflow. Taking in short- (e.g. Illumina) or long-read (e.g. Nanopore) FASTQ or FASTA files, it can perform a range of appropriate preprocessing steps of reads, then perform taxonomic classification and profiling against a range of different tools based on user preferences, and finally perform post-classification aggregation and standardisation of the resulting profiles with the possibility of visualisation of outputs [FIGURE 1]. All relevant preprocessing statistics are displayed in an interactive and dynamic MultiQC report (Ewels et al. 2020). \n\n\n\nFigure 1: Visual overview of the nf-core/taxprofiler workflow. nf-core/taxprofiler can take in FASTQ (short or long reads) or FASTA files (long reads), that will optionally go through sequencing quality control, read preprocessing, complexity filtering, host removal, and run merging before going into taxonomic classification and/or profiling with a user-selected range of tools and databases. Output from all classifiers and profilers are additionally standardised into a common taxon table format and some with visualisation of profiles.\n\n\nWe note that while we are aware of distinctions between metagenomic taxonomic classifiers (or taxonomic binner ) and profilers (Ye et al. 2019; Meyer et al. 2022), we will generally refer to classifiers and profilers as synonyms throughout this article, as previously described (Beber et al. 2023), as many different tools of both types are used in the pipeline.\n\nInput and Execution\nThe pipeline can be executed via typical Nextflow commands, or using the standard nf-core ‘launch’ GUI (https://nf-co.re/taxprofiler/launch), making the pipeline accessible for both computationally experienced as well as less experienced researchers. In addition to the general usage and parameter documentation of the pipeline (https://nf-co.re/taxprofiler). The GUI offers immediate assistance and guidance to users on what each parameter does, both in short- and long-form, with long-form parameter descriptions additionally describing which tool-specific parameter(s) are being modified for each pipeline parameter (Figure 2). The GUI also includes controlled user input by providing strict drop-down lists and input validation prior execution of the pipeline to reduce the risk of typos and other mistakes (in contrast the command-line interface (CLI) that only includes validation at pipeline run-time).\n\n\n\nFigure 2: Screenshot of the nf-core pipeline launch graphical user interface with nf-core/taxprofiler options displayed. The web browser-based interface provides guidance for how to configure each pipeline parameter by providing both short and long help descriptions to help guide users in which contexts to configure each parameter. Additional elements such as radio buttons, drop down menus, and background regular expressions check for validity of input. When pressing launch, a prepared configuration file and command is provided that can be copied and pasted by the user into the terminal\n\n\nAn example nf-core command line execution of the pipeline can be seen in figure (Code Block 1), where two input files are supplied: one of paths of FASTQ files of metagenomic samples and necessary metadata for preprocessing (such as sample ID and sequencing platform), and then a second giving paths to the user-supplied databases with parameters the user wishes the databases to be aligned to with. Various parameters are available to optionally turn on different preprocessing steps, and provide additional configurations such as tool selection and value options. Even if a user supplies a tool’s database to the database input sheet, the user must still activate the execution of each classifier they wish to use with dedicated flags, with some additional per-classifier flags for saving particular optional output files.\n\nListing 1: Example nf-core/taxprofiler command for running short-read quality control, removal of host DNA and executing the k-mer based Kraken2 and marker gene alignment MetaPhlAn3 tools.\n$ nextflow run nf-core/taxprofiler -r 1.1.0 \\\n-profile singularity,&lt;institute&gt; \\\n--input &lt;samplesheet.csv&gt; --databases &lt;database.csv&gt; \\\n--perform_shortread_qc  --shortread_qc_minlength 20 --preprocessing_qc_tool falco \\\n--run_host_removal --hostremoval_reference 'host_genome.fasta' \\\n--run_kraken2 --kraken2_save_reads \\\n--run_metaphlan3 \\\n--run_krona \\\n--run_profile_standardisation \\\n\nAll nf-core pipelines are strictly versioned (specified with the Nextflow -r flag), and to ensure reproducibility each version of the pipeline has a fixed set of software used for each step of the pipeline. The fixed set of software are controlled through the use of the conda package manager and containers (e.g., docker, singularity) from the stable Bioconda (Grüning et al. 2018) and BioContainers (Veiga Leprevost et al. 2017) repositories. This, coupled with the intrinsic Nextflow ability to execute on most infrastructure whether that is a local laptop (resource requirements permitting), traditional HPC, as well across common cloud providers also makes nf-core/taxprofiler a very portable pipeline that can be used across many contexts.\n\n\nPreprocessing\nPreprocessing steps in nf-core/taxprofiler are aimed at removing laboratory and sequencing artefacts that may influence taxonomically profiling, either for computing resource consumption and/or false-positive or false-negative classification reasons. First sequencing quality control with FastQC (Andrews 2010) or Falco (Sena Brandine and Smith 2021) is carried out. Falco was included in for reduced memory requirements in particular for long reads sequencing. Library adapter sequences can reduce accuracy during alignment and are sometimes contaminants inside reference genomes [CITE] CARP BLOG OR OTHERS], and paired-end merging may provide longer sequences that will allow more specific classification when paired-end alignment is not supported by a given classifier. For these tasks nf-core/taxprofiler can apply either fastp (Chen et al. 2018) or AdapterRemoval2 (Schubert, Lindgreen, and Orlando 2016) for short-reads, and Porechop (Wick et al. 2017) for Oxford Nanopore long-read data. For both short- and long-reads FastQC or Falco is run again to allow assessment on the performance of the adapter removal and/or pair-merging step.\nLow complexity sequences, e.g. sequences containing long stretches mono- or di-nucleotide repeats provide little specific genetic information that contribute to taxonomic identification, as they can align to many different reference genomes [CITE]. Including such reads during profiling can increase run-time and memory usage for little gain, as during lowest-common-ancestor (LCA) classification steps they will be assigned to high-level taxonomic levels such as Kingdom. nf-core/taxprofiler offers removal of these reads through complexity filtering algorithms as provided by fastp, BBDuk (Bushnell 2022), or PRINSEQ++ (Cantu, Sadural, and Edwards 2019). Long read sequences often do not have such reads as lengths are sufficient enough to capture greater sequence diversity - but it is sometimes desired to only classify reads longer than a certain length - as these provide sufficient taxonomic information. Therefore nf-core/taxprofiler can remove contigs shorter than a user-defined length using Filtlong.\nAnother common preprocessing step in metagenomic studies is to remove possible host DNA. This can help speed up run-time, particularly for microbiome studies, where detection of only microbes are of interest. Furthermore, host-contamination of reference genomes on public databases is common [CITE], therefore removal of such sequences can also decrease the risk of false positive taxonomic identifications. If users wish to remove multiple hosts or other sequences, they can simply combine all reference genomes into a single FASTA reference file. Short-read host removal can be carried out with Bowtie2 (Langmead and Salzberg 2012; Langmead et al. 2019) and minimap2 (Li 2018)for long-reads, both in combination with SAMtools (Li et al. 2009; Danecek et al. 2021).\nFinally, nf-core/taxprofiler can optionally perform run merging where libraries have been sequenced over multiple lanes to generate one profile per sample or library. The final set of reads used for profiling can be optionally saved for downstream re-use\nAcross all steps, relevant statistics and log files are generated and used both for the final pipeline run report as well as saved into the results directory of the pipeline run for deeper inspection where necessary.\n\n\nProfiling\nThere are many types of metagenomic profile techniques from profiling against whole-genome references with alignment or k-mer based approaches, or methods involving alignment to species-specific marker-gene families Ye et al. (2019). nf-core/taxprofiler aims to support and include all established classification or profiling tools as requested by the community. Which tools are used in a pipeline run is up to the user, with a tool being executed both a corresponding database and --run_&lt;tool&gt; flag is provided. Specific classification/profiling settings for each tool and database are specified in the database CSV input sheet, however for some tools pipeline level command-line flags are available.\nAs of version 1.1.0, the following classifiers and profilers are available: Kraken2 (Wood, Lu, and Langmead 2019), Bracken (Lu et al. 2017), KrakenUniq (F. P. Breitwieser, Baker, and Salzberg 2018), Centrifuge (Kim et al. 2016), MALT (Vågene et al. 2018), DIAMOND (Buchfink, Reuter, and Drost 2021), Kaiju (Menzel, Ng, and Krogh 2016), MetaPhlAn3 and 4 (Beghini et al. 2021; Blanco-Míguez et al. 2023) mOTUs (Ruscheweyh et al. 2022), ganon (Piro et al. 2020), KMCP (Shen et al. 2023). Table 1 summarises the category and reference database type for each tool.\n\n\n\nTable 1: List of nf-core/taxprofiler supported taxonomic profilers as of version 1.1 and their method and support input database types. Sequencing matching type refers to which ‘alphabet’ is primarily used for matching between a query (read) and a reference (genome/gene). Method refers to the algorithm type used for matching. Reference type refers to the typical sequence type used in database construction of the tool.\n\n\n\n\n\n\n\n\nSequence Matching Type\nMethod\nReference Type\nTool\n\n\n\n\nNucleotide\nk-mer based\nwhole-genome\nKraken2\n\n\nNucleotide\nk-mer based\nwhole-genome\nBracken\n\n\nNucleotide\nk-mer based\nwhole-genome\nKrakenUniq\n\n\nNucleotide\nk-mer based\nwhole-genome\nganon\n\n\nNucleotide\nk-mer based\nwhole-genome\nKMCP\n\n\nAmino Acid\nk-mer based\nwhole-genome\nKaiju\n\n\nNucleotide\nalignment based\nwhole-genome\nCentrifuge\n\n\nNucleotide/Amino Acid\nalignment based\nwhole-genome\nMALT\n\n\nAmino Acid\nalignment based\nwhole-genome\nDIAMOND\n\n\nNucleotide\nalignment based\nmarker-gene\nMetaPhlAn3\n\n\nNucleotide\nalignment based\nmarker-gene\nMetaPhlAn4\n\n\nNucleotide\nalignment based\nmarker-gene\nmOTUS\n\n\n\n\n\nnf-core/taxprofiler by default produces the per-sample main taxonomic classification profile from a tool or a tool’s report generation tool, normally in the form of counts per reference sequencing, with additional statistics about the hits of a particular organism (estimated abundance, taxonomic level etc.). Users can also optionally request output of per-read classification output, and output such as classified and unclassified reads in FASTQ format, where supported.\n\n\nPost-profiling\nMetagenomic studies often must compare the profiles between many samples, and the results of multiple profiles are normally stored in ‘taxon tables’, i.e, counts per reference (rows), for each sample (columns). When available nf-core/taxprofiler can optionally produce the ‘native’ taxon table of each classification tool when multiple samples are run.\nWhen researchers wish to compare between taxonomic classifiers or profilers, they must often deal with the heterogenous output formats that are produced by each tool, typically in the form of custom parser and merging scripts for each tool. To facilitate more user-friendly cross-comparison between tools, nf-core/taxprofiler utilises the TAXPASTA tool (Beber et al. 2023) to generate standardised profiles and generate multi-sample tables.\nSummary statistics for the entire pipeline are visualised are displayed in a customisable MultiQC report (Ewels et al. 2020), when supported, to support user quality control of data and pipeline runs. Krona plots (Ondov, Bergman, and Phillippy 2011) can also optionally be generated for supported tools to help provide further visualisation of taxonomic profiles. \n\n\nOutput\nTo summarise, the main default output from nf-core/taxprofiler are both classifier ‘native’ and standardised single- and multi-sample taxonomic profiles with counts per-taxon and an interactive MultiQC run report with all run statistics, in addition to the raw log files themselves where available. The MultiQC run report displays statistics and summary visualisations for all steps of the pipeline where possible, and also includes versions for all tools and dynamically-constructed recommended publication methods text and citations (depending on what options were specified in the pipeline run) that users can use in their own publications. Optional outputs can include other types of profiles (e.g. per read classification) and in other formats as produced by the tools themselves, as well as raw reads from preprocessing steps and output visualisations from Krona. Nextflow resource usage and trace reports are also by default produced for users to check pipeline performance."
  },
  {
    "objectID": "taxprofiler-manuscript.html#discussion",
    "href": "taxprofiler-manuscript.html#discussion",
    "title": "nf-core/taxprofiler: highly parallelised and flexible pipeline for metagenomic taxonomic classification and profiling",
    "section": "Discussion",
    "text": "Discussion\n\nnf-core/taxprofiler has been designed strictly for the processing of metagenomic data. Other types of taxonomic profiling data such as 16S amplicon sequencing are well established fields with a range of popular high-quality and best-practise pipelines (e.g. (Blanco-Míguez et al. 2023; Schloss et al. 2009)) and databases (DeSantis et al. 2006; Yilmaz et al. 2014), whereas the number of robust and high quality pipelines for metagenomics remains much lower - thus the need for highly-multiplexed classification is more desirable for the newer metagenomics method. Despite this, tools such as METAXA2 (Bengtsson-Palme et al. 2015) that use shotgun sequencing reads to recover 16S sequences from metagenomic samples.\nThe pipeline has been developed in the nf-core community, providing strong and long term support for the continued community-based development and maintenance of the pipeline. In this framework, we will continue to add additional metagenomic classification and profiling tools as they become established and as requested by the metagenomics community. This also applies to sequencing platforms, nf-core/taxprofiler already supports Nanopore long-read data, however long-read PacBio data (Portik, Brown, and Pierce-Ward 2022) may be of interest, and thus we could add appropriate preprocessing steps for this type of data too.\nA remaining major challenge for metagenomics researchers is the construction of databases for each of the tools. Currently nf-core/taxprofiler requires users to construct these manually to supply to the pipeline (which we feel is currently reasonable investment as such databases can be repeatedly re-used), however we are exploring including an additional workflow in the pipeline to allow, given a set of FASTA reference files, automated database construction for all classification tool pipelines.\nFinally, once an overall taxonomic profile is generated, researchers often wish to validate hits through more sensitive and accurate methods such as with read-mapping alignment. The pipeline could be easily extended to have a validation step where, utilising Nextflow’s execution parallelism, sequencing libraries could be aligned back to the reference genomes of only those species with hits from the taxonomic classification. This could also have additional benefits for researchers in palaeogenomics, where alignment information can be used to authenticate ancient DNA within their samples."
  },
  {
    "objectID": "taxprofiler-manuscript.html#conclusion",
    "href": "taxprofiler-manuscript.html#conclusion",
    "title": "nf-core/taxprofiler: highly parallelised and flexible pipeline for metagenomic taxonomic classification and profiling",
    "section": "Conclusion",
    "text": "Conclusion\nnf-core/taxprofiler is a accessible and efficient pipeline for metagenomic taxonomic classification and profiling that can be executed on anyway from laptops to the cloud provided there is sufficient computing resources. Offering a wide range of taxonomic profilers, it provides flexibility for users not just on choice of profiling tool but also with databases and database settings, with any number being able to be supplied to the pipeline in a single run. We hope that through detailed documentation and a range of execution options, that nf-core/taxprofiler will make reproducible and high-throughput metagenomics more accessible for a wide range of disciplines."
  },
  {
    "objectID": "taxprofiler-manuscript.html#data-availability",
    "href": "taxprofiler-manuscript.html#data-availability",
    "title": "nf-core/taxprofiler: highly parallelised and flexible pipeline for metagenomic taxonomic classification and profiling",
    "section": "Data Availability",
    "text": "Data Availability\nAll data used in this publication"
  },
  {
    "objectID": "taxprofiler-manuscript.html#code-availability",
    "href": "taxprofiler-manuscript.html#code-availability",
    "title": "nf-core/taxprofiler: highly parallelised and flexible pipeline for metagenomic taxonomic classification and profiling",
    "section": "Code Availability",
    "text": "Code Availability\nnf-core/taxprofiler source code is available on GitHub at https://github.com/nf-core/taxprofiler, and each release is archived on Zenodo (DOI: 10.5281/zenodo.7728364)\nThe version of the pipeline described in this paper is version () (Zenodo archive DOI: )"
  },
  {
    "objectID": "taxprofiler-manuscript.html#supplementary-data",
    "href": "taxprofiler-manuscript.html#supplementary-data",
    "title": "nf-core/taxprofiler: highly parallelised and flexible pipeline for metagenomic taxonomic classification and profiling",
    "section": "Supplementary Data",
    "text": "Supplementary Data"
  },
  {
    "objectID": "taxprofiler-manuscript.html#acknowledgments",
    "href": "taxprofiler-manuscript.html#acknowledgments",
    "title": "nf-core/taxprofiler: highly parallelised and flexible pipeline for metagenomic taxonomic classification and profiling",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nWe thank Prof. Christina Warinner and the Microbiome Sciences group MPI-EVA for original discussions that lead to the pipeline. We are also grateful for the nf-core community for ongoing support in the development in the pipeline, in particular for the contributions by Jianhong Ou."
  },
  {
    "objectID": "taxprofiler-manuscript.html#funding",
    "href": "taxprofiler-manuscript.html#funding",
    "title": "nf-core/taxprofiler: highly parallelised and flexible pipeline for metagenomic taxonomic classification and profiling",
    "section": "Funding",
    "text": "Funding\nS.S. and L.A-L. were supported by Rapid establishment of comprehensive laboratory pandemic preparedness – RAPID-SEQ This material is based upon work supported by the U.S. Department of Agriculture, Agricultural Research Service, under agreement No. 58-3022-0-001 (T.A.C II). M.B. and J.A.F.Y were supported by the Max Planck Society. J.A.F.Y was supported by the Werner Siemens-Stiftung (“Paleobiotechnology”, Awarded to Prof. Pierre Stallforth and Prof. Christina Warinner)."
  }
]